#!/bin/bash
#
# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
#
# Copyright (c) 2010-2014 Oracle and/or its affiliates. All rights reserved.
#
# The contents of this file are subject to the terms of either the GNU
# General Public License Version 2 only ("GPL") or the Common Development
# and Distribution License("CDDL") (collectively, the "License").  You
# may not use this file except in compliance with the License.  You can
# obtain a copy of the License at
# https://glassfish.dev.java.net/public/CDDL+GPL_1_1.html
# or packager/legal/LICENSE.txt.  See the License for the specific
# language governing permissions and limitations under the License.
#
# When distributing the software, include this License Header Notice in each
# file and include the License file at packager/legal/LICENSE.txt.
#
# GPL Classpath Exception:
# Oracle designates this particular file as subject to the "Classpath"
# exception as provided by Oracle in the GPL Version 2 section of the License
# file that accompanied this code.
#
# Modifications:
# If applicable, add the following below the License Header, with the fields
# enclosed by brackets [] replaced by your own identifying information:
# "Portions Copyright [year] [name of copyright owner]"
#
# Contributor(s):
# If you wish your version of this file to be governed by only the CDDL or
# only the GPL Version 2, indicate your decision by adding "[Contributor]
# elects to include this software in this distribution under the [CDDL or GPL
# Version 2] license."  If you don't indicate a single choice of license, a
# recipient has the option to distribute your version of this file under
# either the CDDL, the GPL Version 2 or to extend the choice of license to
# its licensees as provided above.  However, if you add GPL Version 2 code
# and therefore, elected the GPL Version 2 license, then the option applies
# only if the new code is made subject to such option by the copyright
# holder.
#

#
# Check that the number of errors hasn't increased.
# Prints information about increased error counts.
# Exit code indicates number of modules with errors.
#
# Usage: fbcheck [-i findbugs-count-file] [-v] [workspace]
#	-i file	FindBugs error count file to use instead of fbcount output
#	-v	verbose
#

TMP=/tmp/fbcheck.$$

# Where these scripts normally reside
FINDBUGSDIR=/net/gf-hudson/scratch/gf-hudson/export2/hudson/tools/findbugs-tool-latest
DESTFINDBUGSDIR=/scratch/gf-hudson/export2/hudson/tools/findbugs-tool-latest
# Find fbcount in $PATH
PATH=$FINDBUGSDIR:$PATH
#
# The following variables can be changed for debugging.
# Since we're reading the file using NFS and writing it using scp,
# there's an asymmetry here.
#
# The directory containing the recorded error counts
FBHISTDIR=$FINDBUGSDIR/stats/$JOB_NAME
# The location to copy the new error counts to
FBHISTDIRDEST=$DESTFINDBUGSDIR/stats/$JOB_NAME
# The host to copy to
DESTHOST=gf-hudson
# The command to use to copy the cnt file
COPYCNT="scp -q $TMP/findbugs.new $DESTHOST:$FBHISTDIRDEST/findbugs.cnt"
# The command to use to copy the errs file
COPYERRS="scp -q $TMP/findbugs.errs $DESTHOST:$FBHISTDIRDEST/findbugs.errs"
# The command to use to make the directory
MKDIR="ssh $DESTHOST mkdir -p $FBHISTDIRDEST"
# Following for testing...
#FBHISTDIR=$HOME
#FBHISTDIRDEST=$HOME
#COPYCNT="cp $TMP/findbugs.new $FBHISTDIR/findbugs.cnt"
#COPYERRS="cp $TMP/findbugs.errs $FBHISTDIR/findbugs.errs"
#MKDIR="mkdir -p $FBHISTDIR"

trap "rm -rf $TMP" 0 1 2 15
mkdir $TMP

USAGE="fbcheck [-i findbugs-count-file] [-v]"
fblist=
e=true
mkdir=false
errs=0
modules=0

while getopts :i:v i
do
	case $i in
	i)	fblist=$OPTARG;;
	v)	e=echo;;
	'?')	echo "$USAGE"; exit 2;;
	esac
done
shift `expr $OPTIND - 1`

if [ $# -gt 0 ]
then
	cd $1	# change to workspace directory
fi

if [ -f $FBHISTDIR/findbugs.cnt ]
then
	# snapshot the files to make sure they don't change
	# while we're using them
	cp $FBHISTDIR/findbugs.cnt $TMP
	cp $FBHISTDIR/findbugs.errs $TMP
	if ! grep END $TMP/findbugs.cnt > /dev/null
	then
		# XXX - should try a few times
		echo "FAIL: $FBHISTDIR/findbugs.cnt file corrupt!!!"
		exit 1
	fi
# make sure the parent directory exists in case there's an NFS failure
elif [ -d $FINDBUGSDIR ]
then
	# start with an empty file
	echo END >$TMP/findbugs.cnt
	> $TMP/findbugs.errs
	mkdir=true
else
	echo "FAIL: can't access $FINDBUGSDIR"
	exit 1
fi
(
if [ -n "$fblist" ]
then
	cat "$fblist"
else
	fbcount
fi
) | tee $TMP/findbugs.new | (cat "$TMP/findbugs.cnt" -) | awk '
BEGIN {
	history = 1;	# start by reading historical stats
}
{
	if (history)
		stat[$1] = $2;
	else {
	    if (stat[$1] == "")
		    print $1, "-", $2;
	    else
		    print $1, stat[$1], $2;
	}
}
/END/	{
	history = 0;	# switch to processing current stats
}
' > $TMP/diff
while read module old new
do
	modules=`expr $modules + 1`
	if [ "x$old" = "x-" ]
	then
		$e "Module $module is new with $new errors"
		old=0
	fi
	if [ "$new" -gt "$old" ]
	then
		if $mkdir
		then
			:	# everything is new
		else
			echo "========================================"
			echo "Module $module increased from $old to $new errors"
			echo "----------------------------------------"
			errs=`expr $errs + 1`
			echo "Changes in errors:"
			echo "$module/target/findbugsXml.xml" > $TMP/file
			grep "^$module/" $TMP/findbugs.errs > $TMP/old
			fbcat -i $TMP/file > $TMP/new
			diff $TMP/old $TMP/new | grep '^[<>]'
			echo
		fi
	elif [ "$new" -eq "$old" ]
	then
		$e "Module $module unchanged with $old errors"
	else
		$e "Module $module reduced from $old to $new errors"
	fi
done < $TMP/diff
if [ $modules -eq 0 ]
then
	echo "FAIL: No modules!!!"
	exit 1
fi
if [ $errs -eq 0 ]
then
	# success!  update the files
	$e SUCCESS!
	echo END >> $TMP/findbugs.new
	if $mkdir
	then
		$MKDIR
	fi
	fbcat > $TMP/findbugs.errs
	$COPYCNT
	$COPYERRS
	exit	# use exit code of previous command
else
	echo "========================================"
	echo "FAIL: $errs modules with increased FindBugs errors"
	exit 1
fi
