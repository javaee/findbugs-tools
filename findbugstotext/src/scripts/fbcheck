#!/bin/bash
#
# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
#
# Copyright (c) 2010-2013 Oracle and/or its affiliates. All rights reserved.
#
# The contents of this file are subject to the terms of either the GNU
# General Public License Version 2 only ("GPL") or the Common Development
# and Distribution License("CDDL") (collectively, the "License").  You
# may not use this file except in compliance with the License.  You can
# obtain a copy of the License at
# https://glassfish.dev.java.net/public/CDDL+GPL_1_1.html
# or packager/legal/LICENSE.txt.  See the License for the specific
# language governing permissions and limitations under the License.
#
# When distributing the software, include this License Header Notice in each
# file and include the License file at packager/legal/LICENSE.txt.
#
# GPL Classpath Exception:
# Oracle designates this particular file as subject to the "Classpath"
# exception as provided by Oracle in the GPL Version 2 section of the License
# file that accompanied this code.
#
# Modifications:
# If applicable, add the following below the License Header, with the fields
# enclosed by brackets [] replaced by your own identifying information:
# "Portions Copyright [year] [name of copyright owner]"
#
# Contributor(s):
# If you wish your version of this file to be governed by only the CDDL or
# only the GPL Version 2, indicate your decision by adding "[Contributor]
# elects to include this software in this distribution under the [CDDL or GPL
# Version 2] license."  If you don't indicate a single choice of license, a
# recipient has the option to distribute your version of this file under
# either the CDDL, the GPL Version 2 or to extend the choice of license to
# its licensees as provided above.  However, if you add GPL Version 2 code
# and therefore, elected the GPL Version 2 license, then the option applies
# only if the new code is made subject to such option by the copyright
# holder.
#

#
# Check that the number of errors hasn't increased.
# Prints information about increased error counts.
# Exit code indicates number of modules with errors.
#
# Usage: fbcheck [-i findbugs-count-file] [-v] [workspace]
#	-i file	FindBugs error count file to use instead of fbcount output
#	-v	verbose
#

TMP=/tmp/findbugs.cnt.$$
NTMP=/tmp/findbugs.cnt.$$.new

# Where these scripts normally reside
FINDBUGSDIR=/net/bat-sca/repine/export2/hudson/tools/findbugs-tool-latest
DESTFINDBUGSDIR=/export2/hudson/tools/findbugs-tool-latest
# Find fbcount in $PATH
PATH=/net/bat-sca/repine/export2/hudson/tools/findbugs-tool-latest:$PATH
#
# The following variables can be changed for debugging.
# Since we're reading the file using NFS and writing it using scp,
# there's an asymmetry here.
#
# The file containing the recorded error counts
STATFILE=$FINDBUGSDIR/stats/$JOB_NAME/findbugs.cnt
# The location to copy the new error counts to, to replace the above file
DESTSTATFILE=$DESTFINDBUGSDIR/stats/$JOB_NAME/findbugs.cnt
# The host to copy to
DESTHOST=gf-hudson
# The command to use to copy the file
COPY="scp -q $NTMP $DESTHOST:$DESTSTATFILE"
# The command to use to make the directory for the file
MKDIR="ssh $DESTHOST mkdir -p `dirname $DESTSTATFILE`"
# Following for testing...
#STATFILE=$HOME/findbugs.cnt
#DESTSTATFILE=$STATFILE
#COPY="cp $NTMP $DESTSTATFILE"
#MKDIR="mkdir -p `dirname $DESTSTATFILE`"

trap "rm -f $TMP $NTMP" 0 1 2 15

USAGE="fbcheck [-i findbugs-count-file] [-v]"
fblist=
e=true
v=0
mkdir=false

while getopts :i:v i
do
	case $i in
	i)	fblist=$OPTARG;;
	v)	e=echo; v=1;;
	'?')	echo "$USAGE"; exit 2;;
	esac
done
shift `expr $OPTIND - 1`

if [ $# -gt 0 ]
then
	cd $1	# change to workspace directory
fi

if [ -f $STATFILE ]
then
	# snapshot the stat file to make sure it doesn't change
	# while we're using it
	cp $STATFILE $TMP
	if ! grep END $TMP > /dev/null
	then
		# XXX - should try a few times
		echo Stat file corrupt!!!
		exit 1
	fi
# make sure the directory exist in case there's an NFS failure
elif [ -d $FINDBUGSDIR ]
then
	# start with an empty file
	echo END >$TMP
	mkdir=true
else
	echo "FAIL: can't access $FINDBUGSDIR"
	exit 1
fi
(
if [ -n "$fblist" ]
then
	cat "$fblist"
else
	fbcount
fi
) | tee $NTMP | (cat "$TMP" -) | awk '
BEGIN {
	verbose = '$v';
	errs = 0;
	modules = 0;
	history = 1;	# start by reading historical stats
}
{
	if (history)
		stat[$1] = $2;
	else {
	if (stat[$1] == "") {
		if (verbose)
			print "Module " $1 " new, " $2 " errors"
	} else if ($2 == stat[$1]) {
		if (verbose)
			print "Module " $1 " no change, " $2 " errors"
	} else if ($2 < stat[$1]) {
		if (verbose)
			print "Module " $1 " reduced, " $2 " errors"
	} else {
		print "Module " $1 " errors increased from " stat[$1] " to " $2
		errs++
	}
	modules++
	}
}
/END/	{
	history = 0;	# switch to processing current stats
}
END {
	if (modules == 0) {
		print "No modules found!!!"
		exit 1
	}
	exit errs
}
'
stat=$?
if [ $stat -eq 0 ]
then
	# success!  update the stat file
	$e SUCCESS!
	echo END >> $NTMP
	if $mkdir
	then
		$MKDIR
	fi
	$COPY
	exit	# use exit code of previous command
else
	echo "FAIL: $stat modules with increased FindBugs errors"
	exit 1
fi
