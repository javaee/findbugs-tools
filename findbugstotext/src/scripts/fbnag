#! /bin/sh
#
# fbnag - nag people about FindBugs errors
#
#	-n		- don't send mail, show what would be sent
#	-h		- high priority errors; log to database
#	-o email	- set owner email address for error notifications
#	-e email	- force error email to this address
#	-p project	- set project name for email header and log message
#	-v		- verbose; show what's happening
#
#	input is of the form "owner: file: line: text" (output of svnowner).
#
#	users.bad contains a list of users who are never nagged directly
#	users.alias contains aliases for users not known locally
#	nag.msg is the nagging message
#
MAILPROG=${MAILPROG:-/usr/ucb/mail}
NAGMSG=${NAGMSG:-nag.msg}
TMP=/tmp/cs.$$
trap 'rm $TMP' 0 1 2 15

PRIORITY=
LOG=false
OWNER="jill.sato@oracle.com,romain.grecourt@oracle.com,shannon@java.net,neil.kenig@oracle.com"
EMAIL=
PROJECT=
VERBOSE=":"
TIMESTAMP=UNKNOWN
MV=
USAGE='fbnag [-n] [-h] [-o owner-email] [-e email] [-p project] [-v] [-T timestamp]'

while getopts :nho:e:p:vT: i
do
	case $i in
	n)	MAILPROG=echomail;;
	h)	PRIORITY=" HIGH PRIORITY"; LOG=true;;
	o)	OWNER="$OPTARG";;
	e)	EMAIL="$OPTARG";;
	p)	PROJECT="$OPTARG";;
	v)	VERBOSE=echo; MV=-v;;
	T)	TIMESTAMP="$OPTARG";;
	'?')	echo "$USAGE"; exit 2;;
	esac
done
shift `expr $OPTIND - 1`

if [ -n "$PROJECT" ]
then
	PSUB=" in $PROJECT"
else
	PSUB=
fi

to_email() {
	case "$1" in
	*@*)	echo "$1";;
	*)	echo "$1@java.net";;
	esac
}

echomail() {
	echo mail "$@"
	cat
	echo EOF
}

cat >$TMP
sed 's/:.*//' $TMP | sort -u >users
comm -23 users users.bad >users.ok
for i in `cat users.ok`
do
	$VERBOSE "Errors for user: $i"
	if [ -r users.alias ]
	then
		alias=`awk '$1 == "'$i'" { print $2; }' <users.alias`
	fi
	if [ -z "$alias" ]; then alias=$i; fi
	alias=`to_email "$alias"`
	if $LOG
	then
		# send each individual FindBugs error to a web service
		# that will add it to a database
		grep "^$i:" $TMP | while read err
		do
			$VERBOSE "LOG: $PROJECT: $alias: $err"
			fbpost "$TIMESTAMP" "$PROJECT" "$alias" "$err" || break
		done
	fi

	$VERBOSE "Send error message to $alias for $i"
	if [ -n "$EMAIL" ]
	then
		alias="$EMAIL"
		$VERBOSE "Forcing email to $EMAIL"
	fi
	# It's possible for user to receive multiple emails if other users
	# are aliased to the same email address in the users.alias file.
	(cat $NAGMSG; grep "^$i:" $TMP) | $MAILPROG $MV \
		-s "FindBugs$PRIORITY errors$PSUB" -c "$OWNER" "$alias"

done
#
# Send errors for bad users to $OWNER.
#
for i in `comm -12 users users.bad`
do
	$VERBOSE "Bad user: $i"
	grep "^$i:" $TMP | $MAILPROG $MV \
		-s "FindBugs $PRIORITY errors$PSUB [bad users]" "$OWNER"
done
