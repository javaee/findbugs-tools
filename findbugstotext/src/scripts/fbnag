#! /bin/sh
#
# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
#
# Copyright (c) 2010-2013 Oracle and/or its affiliates. All rights reserved.
#
# The contents of this file are subject to the terms of either the GNU
# General Public License Version 2 only ("GPL") or the Common Development
# and Distribution License("CDDL") (collectively, the "License").  You
# may not use this file except in compliance with the License.  You can
# obtain a copy of the License at
# https://glassfish.dev.java.net/public/CDDL+GPL_1_1.html
# or packager/legal/LICENSE.txt.  See the License for the specific
# language governing permissions and limitations under the License.
#
# When distributing the software, include this License Header Notice in each
# file and include the License file at packager/legal/LICENSE.txt.
#
# GPL Classpath Exception:
# Oracle designates this particular file as subject to the "Classpath"
# exception as provided by Oracle in the GPL Version 2 section of the License
# file that accompanied this code.
#
# Modifications:
# If applicable, add the following below the License Header, with the fields
# enclosed by brackets [] replaced by your own identifying information:
# "Portions Copyright [year] [name of copyright owner]"
#
# Contributor(s):
# If you wish your version of this file to be governed by only the CDDL or
# only the GPL Version 2, indicate your decision by adding "[Contributor]
# elects to include this software in this distribution under the [CDDL or GPL
# Version 2] license."  If you don't indicate a single choice of license, a
# recipient has the option to distribute your version of this file under
# either the CDDL, the GPL Version 2 or to extend the choice of license to
# its licensees as provided above.  However, if you add GPL Version 2 code
# and therefore, elected the GPL Version 2 license, then the option applies
# only if the new code is made subject to such option by the copyright
# holder.
#

#
# fbnag - nag people about FindBugs errors
#
#	-n		- don't send mail, show what would be sent
#	-h		- high priority errors; log to database
#	-o email	- set owner email address for error notifications
#	-e email	- force error email to this address
#	-p project	- set project name for email header and log message
#	-v		- verbose; show what's happening
#
#	input is of the form "owner: file: line: text" (output of svnowner).
#
#	users.bad contains a list of users who are never nagged directly
#	users.alias contains aliases for users not known locally
#	nag.msg is the nagging message
#
MAILPROG=${MAILPROG:-/usr/ucb/mail}
NAGMSG=${NAGMSG:-nag.msg}
TMP=/tmp/cs.$$
trap 'rm $TMP' 0 1 2 15

PRIORITY=" LOW PRIORITY"
LOG=false
OWNER="jill.sato@oracle.com,romain.grecourt@oracle.com,shannon@java.net,neil.kenig@oracle.com"
EMAIL=
PROJECT=
REV=
VERBOSE=":"
TIMESTAMP=UNKNOWN
MV=
USAGE='fbnag [-n] [-h] [-o owner-email] [-e email] [-p project] [-r rev] [-v] [-T timestamp]'

while getopts :nho:e:p:r:vT: i
do
	case $i in
	n)	MAILPROG=echomail;;
	h)	PRIORITY=" HIGH PRIORITY"; LOG=true;;
	o)	OWNER="$OPTARG";;
	e)	EMAIL="$OPTARG";;
	p)	PROJECT="$OPTARG";;
	r)	REV=" (rev $OPTARG)";;
	v)	VERBOSE=echo; MV=-v;;
	T)	TIMESTAMP="$OPTARG";;
	'?')	echo "$USAGE"; exit 2;;
	esac
done
shift `expr $OPTIND - 1`

if [ -n "$PROJECT" ]
then
	PSUB=" in $PROJECT$REV"
else
	PSUB="$REV"
fi

to_email() {
	case "$1" in
	*@*)	echo "$1";;
	*)	echo "$1@java.net";;
	esac
}

echomail() {
	echo mail "$@"
	cat
	echo EOF
}

cat >$TMP
sed 's/:.*//' $TMP | sort -u >users
comm -23 users users.bad >users.ok
for i in `cat users.ok`
do
	$VERBOSE "Errors for user: $i"
	if [ -r users.alias ]
	then
		alias=`awk '$1 == "'$i'" { print $2; }' <users.alias`
	fi
	if [ -z "$alias" ]; then alias=$i; fi
	alias=`to_email "$alias"`
	if $LOG
	then
		# send each individual FindBugs error to a web service
		# that will add it to a database
		grep "^$i:" $TMP | while read err
		do
			$VERBOSE "LOG: $PROJECT: $alias: $err"
			fbpost "$TIMESTAMP" "$PROJECT" "$alias" "$err" || break
		done
	fi

	$VERBOSE "Send error message to $alias for $i"
	if [ -n "$EMAIL" ]
	then
		alias="$EMAIL"
		$VERBOSE "Forcing email to $EMAIL"
	fi
	# It's possible for user to receive multiple emails if other users
	# are aliased to the same email address in the users.alias file.
	(cat $NAGMSG; grep "^$i:" $TMP) | $MAILPROG $MV \
		-s "FindBugs$PRIORITY errors$PSUB" -c "$OWNER" "$alias"

done
#
# Send errors for bad users to $OWNER.
#
for i in `comm -12 users users.bad`
do
	$VERBOSE "Bad user: $i"
	grep "^$i:" $TMP | $MAILPROG $MV \
		-s "FindBugs $PRIORITY errors$PSUB [bad users]" "$OWNER"
done
